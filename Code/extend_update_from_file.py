'''
This program uses a imported csv file to update the check-ins of contracts in the spreadsheet.
'''
__author__ = "Lukas Beck"
__date__ = "31.10.2025"

import datetime

from tkinter import Tk
from tkinter.filedialog import askopenfilename

from Code.lib.locker_parent import LockerParent


class ExtendUpdateFromFile(LockerParent):
    def __init__(self):
        super().__init__()

        print(f"This Program updates the check-ins from a csv-list (generated by the website).")

        # get csv file via file dialog
        # NOTE - This doesn't work in vscode terminal if before it input() was used
        filename = askopenfilename(
            title='Select the exported check-in file',
            filetypes=(
                ("CSV files", "*.csv"),
        )
)
        if filename == "":
            print("No file selected, exiting.")
            return
        print(f"Selected file: {filename}")
        
        self.load_spreadsheet()
        table: dict[int, dict] = self.spreadsheet.get_table_as_dict()
        print("Table loaded.")
        
        with open(filename, "r") as file:
            lines = file.readlines()
            # skip the header
            lines = lines[1:]

            updated = False

            for line in lines:
                parts = line.strip().split(',')
                if len(parts) < 3:
                    raise ValueError("Invalid line format. Expected format: number,code,check_in_at")
                
                # no check-in
                if parts[2] == "":
                    continue

                number = int(parts[0])
                check_in_at = datetime.datetime.strptime(parts[2], "%Y-%m-%d")

                try:
                    entry = table[number]
                except KeyError:
                    raise KeyError(f"Entry with number {number} not found in spreadsheet.")
                
                if entry["rented"] != 1:
                    print(f" -> Entry {number} is not rented, skipping.")
                    continue

                entry["extended"] = check_in_at
                updated = self.spreadsheet.update_entry(entry) or updated

            if updated:
                self.save_spreadsheet()